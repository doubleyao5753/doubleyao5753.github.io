<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>总结ES6常用 语法 + API</title>
      <link href="/2019/08/18/es6-chang-yong-api/"/>
      <url>/2019/08/18/es6-chang-yong-api/</url>
      
        <content type="html"><![CDATA[<p>ES6是什么，就不赘述了。</p><p>如果你也跟当下的我一样，有一些JavaScript基础，想在工作中提高开发的效率和优化简化代码，但暂时又没有充分的时间系统的学习ES6，那么此文就很适合你啦。或许大家都知道，只要基础够扎实，跟着阮一峰大佬的名著<a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">《ES6标准入门》</a>走一遍敲敲代码，学好并应用以来是完全不是事儿的。我们只是暂时性的尝尝鲜，亦或是学过了记不住，平常用的时候模糊了，拿来翻一翻也是再好不过的。</p><h4 id="快速搭建ES6-环境"><a href="#快速搭建ES6-环境" class="headerlink" title="快速搭建ES6 环境"></a>快速搭建ES6 环境</h4><p>现如今大多数浏览器并不认识ES6语法，所以我们需要一些打包编译工具例如：<a href="https://www.webpackjs.com/" target="_blank" rel="noopener">webpack</a>、<a href="https://www.babeljs.cn/" target="_blank" rel="noopener">Babel</a>、<a href="https://www.gulpjs.com.cn/" target="_blank" rel="noopener">gulp</a> 等等。至于具体环境的搭建，可以参考这位仁兄的个人博客，非常详细，致敬！</p><p><a href="https://www.cnblogs.com/zhouyangla/p/7076292.html" target="_blank" rel="noopener">最贴心的ES6环境搭建</a></p><h4 id="ES6语法：常用的就这么几个"><a href="#ES6语法：常用的就这么几个" class="headerlink" title="ES6语法：常用的就这么几个"></a>ES6语法：常用的就这么几个</h4><p>无论是ES6还是English，学习任何一门语言，首要的在其语言的规则和规律 —— 语法。</p><p>别看ES6语法书那么厚一本，文档目录那么长一大串，真正用在刀刃上的不过十分之一。用取经取过来的话说：下面提到的语法可能也就是es6新特性的10%-20%，但是开发上占了80%左右的。所以只要我们暂时弄清楚这部分，挑最核心最实用的学习，便是用最少的时间成本获取最优的价值收益。</p><h5 id="1-变量声明：let-const"><a href="#1-变量声明：let-const" class="headerlink" title="1. 变量声明：let / const"></a>1. 变量声明：let / const</h5><h5 id="2-箭头函数"><a href="#2-箭头函数" class="headerlink" title="2. 箭头函数"></a>2. 箭头函数</h5><h5 id="3-模板字符串"><a href="#3-模板字符串" class="headerlink" title="3. 模板字符串"></a>3. 模板字符串</h5><h5 id="4-解构赋值"><a href="#4-解构赋值" class="headerlink" title="4. 解构赋值"></a>4. 解构赋值</h5><h5 id="5-剩余-扩展运算符"><a href="#5-剩余-扩展运算符" class="headerlink" title="5. 剩余/ 扩展运算符"></a>5. 剩余/ 扩展运算符</h5><h5 id="6-简写对象属性-方法"><a href="#6-简写对象属性-方法" class="headerlink" title="6. 简写对象属性/方法"></a>6. 简写对象属性/方法</h5><h5 id="7-Promise"><a href="#7-Promise" class="headerlink" title="7. Promise"></a>7. Promise</h5><h5 id="8-Module"><a href="#8-Module" class="headerlink" title="8. Module"></a>8. Module</h5><p><a href="https://juejin.im/post/5c6234f16fb9a049a81fcca5" target="_blank" rel="noopener">掘金一万字的ES6语法</a></p><p><a href="https://juejin.im/post/5a08e5c55188252abc5dd96f#heading-8" target="_blank" rel="noopener">掘金 ES6 常用 API</a></p><p><a href="https://segmentfault.com/a/1190000014824675#articleHeader7" target="_blank" rel="noopener">思否常用语法</a></p><p><a href="https://juejin.im/entry/58f21df95c497d006c87469e" target="_blank" rel="noopener">掘金30分钟搞定ES6</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> ES6 JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Get Start My Hexo Blogs Way</title>
      <link href="/2019/08/14/first-blog/"/>
      <url>/2019/08/14/first-blog/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这第一篇具有划时代意义的文章，单纯写一写我这即将踏上创作旅程的澎湃之心。</p></blockquote><p>自开始学习前端的第一天起，无论是 Google 还是百度，所领略到的大多技术文章都来自<code>CSDN</code>、<code>掘金</code>、<code>思否</code>、<code>简书</code>。对，在此特别安利一下<strong>掘金——我的知识朋友圈</strong>。无可否认这些开发者社区在无数场景替我解决了难题，亦或是给予我灵感。也曾不止一次的期待像他们那样，在这些平台笔耕不辍，既内化了知识，又帮助了他人。</p><p>但我还是希望拥有我自己的个人站点，用我的手艺，我的一生，打造我的作品，我的一片天。</p><p><strong>目的不是为了流量和人气，而是内省和学习。</strong></p><p>我知道持续做好自己喜欢的事，该来的也许会迟到，但绝不会缺席。</p><p>如果读者有幸能来到我的站点，可以给你一些帮助，解决某个问题，不用客气，那是我的运气。</p><h3 id="致敬"><a href="#致敬" class="headerlink" title="致敬"></a>致敬</h3><ul><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 官方教程</a></li><li><a href="https://github.com/esappear/hexo-theme-clover" target="_blank" rel="noopener">UI 设计师 Clover 的主题作品</a></li><li><a href="https://chars.tech/blog/build-blog-by-hexo/" target="_blank" rel="noopener">手把手教 GitHub + Hexo 搭建博客</a></li><li><a href="http://dxjia.cn/2016/01/27/hexo-write-everywhere/" target="_blank" rel="noopener">用两个分支写博客</a></li></ul><h3 id="搭建概要"><a href="#搭建概要" class="headerlink" title="搭建概要"></a>搭建概要</h3><p>如果你也想要搭建一个这样的博客，完全可以立即行动以来，不要畏惧，一行代码都不用写。</p><h4 id="需要准备"><a href="#需要准备" class="headerlink" title="#需要准备"></a>#需要准备</h4><p>安装<code>Node.js</code>（附带安装<code>npm</code>）</p><p>基本的<code>html</code>、<code>css</code>、<code>JavaScript</code>知识</p><p><code>GitHub</code>账号</p><p>基本的几条<code>Git</code>命令或者相关工具</p><h4 id="开始搭建"><a href="#开始搭建" class="headerlink" title="#开始搭建"></a>#开始搭建</h4><ol><li><p>将<code>Node.js</code>环境安装到本地计算机，去官网下载一直下一步即可</p></li><li><p>将<code>Git</code>工具安装到本地，Windows 安装 git bash</p></li><li><p>进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo 官网</a>，了解并读文档，读取按照步骤</p></li><li><p>在命令行通过此命令安装 Hexo</p><p><code>npm install hexo-cli -g</code></p></li><li><p>初始化博客项目目录，搭建初始结构</p><pre class=" language-bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span></code></pre><pre><code>-- 初始博客目录结构.├── _config.yml├── package.json├── scaffolds├── source|   ├── _drafts|   └── _posts└── themes</code></pre></li><li><p>在 <code>_config.yml</code>中配置你特有的参数，官网文档很详细</p></li><li><p>本地预览</p><pre><code>$ hexo server// 浏览器打开localhost:4000即可预览</code></pre></li></ol><h4 id="主题替换"><a href="#主题替换" class="headerlink" title="#主题替换"></a>#主题替换</h4><p>不用说，Hexo 默认的主题没人愿意用，除非你只关注于文章的内容，又或者真的是想着<code>别人有的我也要有</code>。</p><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo 官网</a>有几百个开源的主题供你尽情挑选，看到喜欢的，就去里面的 GitHub 仓库下载下来，添加到博客目录下的<code>themes</code>文件夹下，再到配置文件里面将主题名字替换为新的主题名字即可。</p><p>除了官网，GitHub 上还有更多私人定制好的开源主题，你只需要 Google 一下。</p><p>每个主题都是一个小项目，是一个静态网站的模板，同样几乎都有功能介绍、使用文档，以及 demo 演示。只要文章不变，网站的样式可以根据主题一键更换，可以说是非常的友好啦。</p><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="#常用命令"></a>#常用命令</h4><pre class=" language-bash"><code class="language-bash">常用命令：hexo init                     <span class="token comment" spellcheck="true">#初始化一个目录</span>hexo new <span class="token string">"postName"</span>         <span class="token comment" spellcheck="true">#新建文章</span>hexo new page <span class="token string">"pageName"</span>     <span class="token comment" spellcheck="true">#新建页面</span>hexo generate                 <span class="token comment" spellcheck="true">#生成网页，可以在 public 目录查看整个网站的文件</span>hexo server                 <span class="token comment" spellcheck="true">#本地预览，'Ctrl+C'关闭</span>hexo deploy                 <span class="token comment" spellcheck="true">#部署.deploy目录</span>hexo clean                     <span class="token comment" spellcheck="true">#清除缓存，强烈建议每次执行命令前先清理缓存，每次部署前先删除 .deploy 文件夹</span>简写：hexo n <span class="token operator">==</span> hexo newhexo g <span class="token operator">==</span> hexo generatehexo s <span class="token operator">==</span> hexo serverhexo d <span class="token operator">==</span> hexo deploy</code></pre><h4 id="日常管理"><a href="#日常管理" class="headerlink" title="#日常管理"></a>#日常管理</h4><p><strong>强烈建议：</strong><a href="http://dxjia.cn/2016/01/27/hexo-write-everywhere/" target="_blank" rel="noopener">用两个分支写博客</a></p><p>将部署上线的版本放在 GitHub 仓库下的<code>master</code>分支下，将 hexo 写作配置环境放在<code>hexo</code>分支下。</p><p>在项目的配置文件中配置部署参数：</p><pre class=" language-bash"><code class="language-bash">deploy:  type: <span class="token function">git</span>  repo: https://github.com/dxjia/dxjia.github.io.git  branch: master</code></pre><p>日常本地 hexo 分支，这样每次部署时，自动更新到 master 分支下，而不会对 hexo 分支造成影响。也方便在不同的电脑中写作。</p><h3 id="未来迭代"><a href="#未来迭代" class="headerlink" title="未来迭代"></a>未来迭代</h3><p><strong>Hexo + GitHub + Typora</strong> 三者合一，用 MarkDown 语法随心所欲地写作，简直无懈可击，除了那死慢的 GitHub 令人恶心之外。还有无数可定制化的主题，可以满足很多天马行空的想象了。</p><p>至今还在实习期，闲下来的时间不多，技术功底也不是很强悍。在短期内这个作品处于 <code>DoubleYao 1.0</code>阶段。</p><p><strong>后期规划： DoubleYao 2.0</strong></p><blockquote><ul><li>独立设计，全新的 UI 界面和交互方式</li><li>随着文章数量的增多，增加 tags 标签和分类</li><li>模块：技术 + 随笔 + 手册 + 工具</li></ul></blockquote><p>余生慢慢打磨。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/11/hello-world/"/>
      <url>/2019/08/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
